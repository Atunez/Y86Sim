         .pos 0
         irmovq stack, %rsp
         irmovq list, %rdi
         irmovq $8, %rbx
         call minList
         halt
#
# minList: return the minimum value of the elements of a NULL terminated list
# parameter: %rdi contains the value list, which
#            is the adress of the first element in the list
# return: %rax contains the minimum value in the list

# rdx > current ele
# rbx > counter
# rdi > pos
# rsi > checker
minList: 
        irmovq 0, %rsi
        mrmovq 0(%rdi), %rdx
        addq %rax, %rsi
        subq %rdx, %rsi
        jg swap
        addq %rbx, %rdi
        andq %rdx, %rdx
        jne minList
        ret  
        .align 8
swap:
        rrmovq %rdx, %rax
        addq %rbx, %rdi
        jmp minList
        .align 8
list:    .quad 22
         .quad 53
         .quad -7 
         .quad 1
         .quad -2
         .quad 42
         .quad -5
         .quad 0  #indicates the end of the list
#
         .pos 0x200
stack:
